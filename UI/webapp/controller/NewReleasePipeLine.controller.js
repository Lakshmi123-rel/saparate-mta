sap.ui.define([
	"scp/com/saparate/controller/BaseController"
], function (BaseController) {
	"use strict";

	return BaseController.extend("scp.com.saparate.controller.NewReleasePipeLine", {

		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf scp.com.saparate.view.NewReleasePipeLine
		 */
		onInit: function () {
			this._oRouter = this.getOwnerComponent().getRouter();
			this._oRouter.getRoute("NewReleasePipeLine").attachPatternMatched(this._onObjectMatched, this);
		},
		openBuildPipeLineSearch: function (oEvent) {
			//This code was generated by the layout editor.
			var oSplitContainer = this.byId("idReleasePipelineContainer");
			oSplitContainer.setShowSecondaryContent(!oSplitContainer.getShowSecondaryContent());
		},
		_onObjectMatched: function (oEvent) {
				this.loadDatatoViewwithKey_GET("jobs", "AddBuilds",
					sap.ui.getCore().getModel("oKeyModel").getProperty("/saparate/key"));
			}
			/**
			 * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
			 * (NOT before the first rendering! onInit() is used for that one!).
			 * @memberOf scp.com.saparate.view.NewReleasePipeLine
			 */
			//	onBeforeRendering: function() {
			//
			//	},

		/**
		 * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
		 * This hook is the same one that SAPUI5 controls get after being rendered.
		 * @memberOf scp.com.saparate.view.NewReleasePipeLine
		 */
		//	onAfterRendering: function() {
		//
		//	},

		/**
		 * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
		 * @memberOf scp.com.saparate.view.NewReleasePipeLine
		 */
		//	onExit: function() {
		//
		//	}

	});

});